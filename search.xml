<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[GitHub入门手册]]></title>
      <url>http://yoursite.com/2017/03/05/2017.3.5%20Attainments05%20GitHub%E5%85%A5%E9%97%A8%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>用了快一年的GitHub，只是搭建一个blog，没有<strong>真正意义</strong>上地使用过任何核心功能。所以，今天来入坑，听说这能激励自己高产代码？</p>
<h1 id="GitHub简介"><a href="#GitHub简介" class="headerlink" title="GitHub简介"></a>GitHub简介</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[数据库池化管理]]></title>
      <url>http://yoursite.com/2016/10/04/2016.10.4%20Database01%20%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B1%A0%E5%8C%96%E7%AE%A1%E7%90%86/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h1 id="数据库的“池化管理”"><a href="#数据库的“池化管理”" class="headerlink" title="数据库的“池化管理”"></a>数据库的“池化管理”</h1><p>池化管理，是程序设计中一个非常重要的思想。目前我了解到的池化管理有数据库的<strong>连接池</strong>、多线程程序设计中的<strong>线程池</strong>。<br><em>本文探讨的是数据库的池化管理，其他会在后续的文章中补充。</em></p>
<p>定义<br><blockquote><p>数据库连接池负责分配、管理和释放数据库连接，它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个；释放空闲时间超过最大空闲时间的数据库连接来避免因为没有释放数据库连接而引起的数据库连接遗漏。这项技术能明显提高对数据库操作的性能。</p>
<footer><strong>百度百科</strong><cite><a href="http://baike.baidu.com/link?url=JC8_LLM2NVErveyTgcWf8dfhmgRcH_HmQzsDMfW04egXtDOUC6ZBXC5yG2y2zTqSo3KL586q8i_uag-yvYP3R5D34et5pS-HjIGM00ETWe2ACRYCAoVbcAyIUWxi2wPsi6W_-d36diIEr4W24DCzOjOK1Yg7bZA97BphTirssuZJpP3I_nOz4mOo45BTVdhofSiuKjc9Q8xAzQdLXcnbhL8qbouDUoWVmA8OfiSAANm" target="_blank" rel="external">数据库连接池</a></cite></footer></blockquote><br><br></p>
<h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>连接池基本的思想是在系统初始化的时候，将数据库连接作为对象存储在内存中，当用户需要访问数据库时，并非建立一个新的连接，而是<strong>从连接池中取出一个已建立的空闲连接对象</strong>。使用完毕后，用户也并非将连接关闭，而是<strong>将连接放回连接池中</strong>，以供下一个请求访问使用。而连接的建立、断开都由连接池自身来管理。另外，也可以通过其自身的管理机制来监视数据库连接的数量、使用情况等。</p>
<h1 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h1><ul>
<li>初始连接数</li>
<li>连接数上限</li>
<li>连接数下限</li>
<li>每个连接的最大使用次数</li>
<li>最大空闲时间</li>
</ul>
<a id="more"></a>
<h1 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h1><ol>
<li><p>资源重用<br>由于数据库连接得到重用，避免了频繁创建、释放连接引起的大量性能开销。在减少系统消耗的基础上，另一方面也增进了系统运行环境的平稳性（减少内存碎片以及数据库临时进程/线程的数量）。</p>
</li>
<li><p>更快的系统响应速度<br>数据库连接池在初始化过程中，往往已经创建了若干数据库连接置于池中备用。此时连接的初始化工作均已完成。对于业务请求处理而言，直接利用现有可用连接，避免了数据库连接初始化和释放过程的时间开销，从而缩减了系统整体响应时间。</p>
</li>
<li><p>新的资源分配手段<br>对于多应用共享同一数据库的系统而言，可在应用层通过数据库连接的配置，实现数据库连接池技术，几年钱也许还是个新鲜话题，对于目前的业务系统而言，如果设计中还没有考虑到连接池的应用，那么…….快在设计文档中加上这部分的内容吧。某一应用最大可用数据库连接数的限制，避免某一应用独占所有数据库资源。</p>
</li>
<li><p>统一的连接管理，避免数据库连接泄漏<br>在较为完备的数据库连接池实现中，可根据预先的连接占用超时设定，强制收回被占用连接。从而避免了常规数据库连接操作中可能出现的资源泄漏。一个最小化的数据库连接池实现：</p>
</li>
</ol>
<h1 id="制约因素"><a href="#制约因素" class="headerlink" title="制约因素"></a>制约因素</h1><p>在初始化时，连接池将创建一定数量的数据库连接放到池中。<br>开发/管理人员需要考虑到以下3个因素：</p>
<ol>
<li>最小连接数<br>是连接池一直保持的数据库连接，所以如果应用程序对数据库连接的使用量不大，将会有大量的数据库连接资源被浪费。</li>
<li>最大连接数<br>是连接池能申请的最大连接数，如果数据库连接请求超过此数，后面的数据库连接请求将被加入到等待队列中，这会影响之后的数据库操作。</li>
<li>最小连接数与最大连接数的差值<br>最小连接数与最大连接数相差太大，那么最先的连接请求将会获利，之后超过最小连接数量的连接请求等价于建立一个新的数据库连接。不过，这些大于最小连接数的数据库连接在使用完不会马上被释放，它将被放到连接池中等待重复使用或是空闲超时后被释放。</li>
</ol>
<h1 id="开源的Java连接池产品"><a href="#开源的Java连接池产品" class="headerlink" title="开源的Java连接池产品"></a>开源的Java连接池产品</h1><ol>
<li>C3P0：是一个开放源代码的JDBC连接池，它在lib目录中与Hibernate一起发布，包括了实现jdbc3和jdbc2扩展规范说明的Connection 和Statement 池的DataSources 对象。</li>
<li>Proxool：是一个Java SQL Driver驱动程序，提供了对选择的其它类型的驱动程序的连接池封装。可以非常简单的移植到现存的代码中，完全可配置，快速、成熟、健壮。可以透明地为现存的JDBC驱动程序增加连接池功能。</li>
<li>Jakarta DBCP：DBCP是一个依赖Jakartacommons-pool对象池机制的数据库连接池。DBCP可以直接的在应用程序中使用。</li>
<li>……</li>
</ol>
<h1 id="以C3P0为例的连接池应用"><a href="#以C3P0为例的连接池应用" class="headerlink" title="以C3P0为例的连接池应用"></a>以C3P0为例的连接池应用</h1><h2 id="配置C3P0"><a href="#配置C3P0" class="headerlink" title="配置C3P0"></a>配置C3P0</h2><h3 id="形式1：xml文件"><a href="#形式1：xml文件" class="headerlink" title="形式1：xml文件"></a>形式1：xml文件</h3><p>以JavaEE的经典Web工程结构为例，在<code>/src</code>路径下编写一个<code>c3p0-config.xml</code>文件。<br>在这个配置文件中，我需要手动设定上面提到的连接池的各项参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;c3p0-config&gt;</div><div class="line">	&lt;default-config&gt;</div><div class="line">		&lt;property name=&quot;jdbcUrl&quot;&gt;jdbc:mysql://localhost/test</div><div class="line">		&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;driverClass&quot;&gt;com.mysql.jdbc.Driver&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;user&quot;&gt;root&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;password&quot;&gt;root&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;initialPoolSize&quot;&gt;3&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;maxPoolSize&quot;&gt;6&lt;/property&gt;</div><div class="line">		&lt;property name=&quot;maxIdleTime&quot;&gt;1000&lt;/property&gt;</div><div class="line">	&lt;/default-config&gt;</div><div class="line">&lt;/c3p0-config&gt;</div></pre></td></tr></table></figure></p>
<h3 id="形式2：properties文件"><a href="#形式2：properties文件" class="headerlink" title="形式2：properties文件"></a>形式2：properties文件</h3><p>与上面类似的方法，编写<code>c3p0.properties</code>文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">c3p0.jdbcUrl=jdbc:mysql://localhost/test  </div><div class="line">c3p0.driverClass=com.mysql.jdbc.Driver  </div><div class="line">c3p0.user=root  </div><div class="line">c3p0.password=root  </div><div class="line">  </div><div class="line">c3p0.acquireIncrement=3   </div><div class="line">c3p0.idleConnectionTestPeriod=60      </div><div class="line">c3p0.initialPoolSize=10   </div><div class="line">c3p0.maxIdleTime=60   </div><div class="line">c3p0.maxPoolSize=20   </div><div class="line">c3p0.maxStatements=100    </div><div class="line">c3p0.minPoolSize=5</div></pre></td></tr></table></figure></p>
<h2 id="使用连接池实例1"><a href="#使用连接池实例1" class="headerlink" title="使用连接池实例1"></a>使用连接池实例1</h2><h3 id="编写连接池的类"><a href="#编写连接池的类" class="headerlink" title="编写连接池的类"></a>编写连接池的类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.sql.DataSource;</div><div class="line"><span class="keyword">import</span> org.apache.commons.dbutils.QueryRunner;</div><div class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * 工具类：</div><div class="line"> * 1、初始化C3p0连接池</div><div class="line"> * 2、创建DbUtils核心工具类对象</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcUtil</span> </span>&#123;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 1、初始化C3p0连接池</div><div class="line">	 */</div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource=<span class="keyword">null</span>;</div><div class="line">	<span class="keyword">static</span>&#123;</div><div class="line">		dataSource=<span class="keyword">new</span> ComboPooledDataSource();</div><div class="line">	&#125;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * 2、创建DbUtils核心工具类对象 --&gt; QueryRunner</div><div class="line">	 */</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> QueryRunner <span class="title">getQueryRunner</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="comment">//创建QueryRunner对象，传入连接池对象</span></div><div class="line">		<span class="comment">//在创建QueryRunner对象时，如果传入了数据源对象，</span></div><div class="line">		<span class="comment">//那么在使用QueryRunner对象的方法时，就不用传入连接对象</span></div><div class="line">		<span class="comment">//会自动从数据源中获取连接（不用去关闭连接）</span></div><div class="line">		<span class="keyword">return</span> <span class="keyword">new</span> QueryRunner(dataSource);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="在Servlet中使用连接池管理连接的打开和关闭"><a href="#在Servlet中使用连接池管理连接的打开和关闭" class="headerlink" title="在Servlet中使用连接池管理连接的打开和关闭"></a>在Servlet中使用连接池管理连接的打开和关闭</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">String sql =<span class="string">"select......"</span>;</div><div class="line">String areaname = <span class="string">"A"</span>;</div><div class="line">humlistA =  JdbcUtil.getQueryRunner().query(sql,<span class="keyword">new</span> BeanListHandler&lt;Hum&gt;(Hum.class), areaname);</div></pre></td></tr></table></figure>
<h2 id="使用连接池实例2"><a href="#使用连接池实例2" class="headerlink" title="使用连接池实例2"></a>使用连接池实例2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.sql.Connection;  </div><div class="line"><span class="keyword">import</span> java.sql.SQLException;  </div><div class="line"><span class="keyword">import</span> javax.sql.DataSource;  </div><div class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;  </div><div class="line">  </div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C3P0Utils</span> </span>&#123;  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource ds;  </div><div class="line">  </div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadLocal&lt;Connection&gt; tl = <span class="keyword">new</span> ThreadLocal&lt;Connection&gt;(); <span class="comment">// map  </span></div><div class="line">    <span class="keyword">static</span> &#123;  </div><div class="line">        ds = <span class="keyword">new</span> ComboPooledDataSource();<span class="comment">//直接使用即可，不用显示的配置，其会自动识别配置文件  </span></div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span> </span>&#123;  </div><div class="line">        <span class="keyword">return</span> ds;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            <span class="comment">// 得到当前线程上绑定的连接  </span></div><div class="line">            Connection conn = tl.get();  </div><div class="line">            <span class="keyword">if</span> (conn == <span class="keyword">null</span>) &#123; <span class="comment">// 代表线程上没有绑定连接  </span></div><div class="line">                conn = ds.getConnection();  </div><div class="line">                tl.set(conn);  </div><div class="line">            &#125;  </div><div class="line">            <span class="keyword">return</span> conn;  </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startTransaction</span><span class="params">()</span> </span>&#123;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            <span class="comment">// 得到当前线程上绑定连接开启事务  </span></div><div class="line">            Connection conn = tl.get();  </div><div class="line">            <span class="keyword">if</span> (conn == <span class="keyword">null</span>) &#123; <span class="comment">// 代表线程上没有绑定连接  </span></div><div class="line">                conn = ds.getConnection();  </div><div class="line">                tl.set(conn);  </div><div class="line">            &#125;  </div><div class="line">            conn.setAutoCommit(<span class="keyword">false</span>);  </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">commitTransaction</span><span class="params">()</span> </span>&#123;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            Connection conn = tl.get();  </div><div class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;  </div><div class="line">                conn.commit();  </div><div class="line">            &#125;  </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeConnection</span><span class="params">()</span> </span>&#123;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            Connection conn = tl.get();  </div><div class="line">            <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;  </div><div class="line">                conn.close();  </div><div class="line">            &#125;  </div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;  </div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);  </div><div class="line">        &#125; <span class="keyword">finally</span> &#123;  </div><div class="line">            tl.remove(); <span class="comment">// 千万注意，解除当前线程上绑定的链接（从threadlocal容器中移除对应当前线程的链接）  </span></div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p><a href="http://www.mchange.com/projects/c3p0/" target="_blank" rel="external">C3P0官方网站</a></p>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[算法（1）]]></title>
      <url>http://yoursite.com/2016/10/02/2016.10.2%20Algorithms01%20%E7%AE%97%E6%B3%95%EF%BC%881%EF%BC%89/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>开坑来记录最近学习算法过程中的体会。</p>
<a id="more"></a>
<h1 id="算法初步"><a href="#算法初步" class="headerlink" title="算法初步"></a>算法初步</h1><h2 id="计算复杂性理论"><a href="#计算复杂性理论" class="headerlink" title="计算复杂性理论"></a>计算复杂性理论</h2><blockquote><p>计算复杂性理论（Computational complexity theory）所研究的资源中最常见的是时间（要通过多少步演算才能解决问题）和空间（在解决问题时需要多少内存）。其他资源亦可考虑，例如在并行计算中，需要多少并行处理器才能解决问题。</p>
<p>时间复杂度是指在计算机科学与工程领域完成一个算法所需要的时间，是衡量一个算法优劣的重要参数。时间复杂度越小，说明该算法效率越高，则该算法越有价值。</p>
<p>空间复杂度是指计算机科学领域完成一个算法所需要占用的存储空间，一般是输入参数的函数。它是算法优劣的重要度量指标，一般来说，空间复杂度越小，算法越好。我们假设有一个图灵机来解决某一类语言的某一问题，设有X个字（word）属于这个问题，把X放入这个图灵机的输入端，这个图灵机为解决此问题所需要的工作带格子数总和称为空间。</p>
<p>复杂度理论和可计算性理论不同，可计算性理论的重心在于问题能否解决，不管需要多少资源。而复杂性理论作为计算理论的分支，某种程度上被认为和算法理论是一种“矛”与“盾”的关系，即算法理论专注于设计有效的算法，而复杂性理论专注于理解为什么对于某类问题，不存在有效的算法。</p>
<footer><strong>维基百科</strong><cite><a href="https://zh.wikipedia.org/wiki/%E8%A8%88%E7%AE%97%E8%A4%87%E9%9B%9C%E6%80%A7%E7%90%86%E8%AB%96" target="_blank" rel="external">计算复杂性理论</a></cite></footer></blockquote>
<p><br></p>
<h2 id="时间复杂度的定义"><a href="#时间复杂度的定义" class="headerlink" title="时间复杂度的定义"></a>时间复杂度的定义</h2><blockquote><p>在计算机科学中，算法的时间复杂度是一个函数，它定量描述了该算法的运行时间。这是一个代表算法输入值的字符串的长度的函数。<strong>时间复杂度常用大O符号表述</strong>，不包括这个函数的低阶项和首项系数。使用这种方式时，时间复杂度可被称为是<strong>渐近的</strong>，即考察<strong>输入值大小趋近无穷</strong>时的情况。</p>
<p>例如，如果一个算法对于任何大小为 n （必须比 $n_0$ 大）的输入，它至多需要 $5n^3 + 3n$ 的时间运行完毕，那么它的渐近时间复杂度是 O($n^3$)。</p>
<footer><strong>维基百科</strong><cite><a href="https://zh.wikipedia.org/wiki/%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6" target="_blank" rel="external">时间复杂度</a></cite></footer></blockquote>
<p><br></p>
<h2 id="时间-空间复杂度的联系"><a href="#时间-空间复杂度的联系" class="headerlink" title="时间/空间复杂度的联系"></a>时间/空间复杂度的联系</h2><ul>
<li>意义：在实现算法之前先估算它的效率/好坏</li>
<li>时间复杂度的指标：基本操作次数/汇编指令条数</li>
<li>空间复杂度的指标：占用内存字节（byte）数</li>
<li>区别：空间可以再利用，时间不可以</li>
<li>时空互换：哈希表/动态规划，以充分发挥硬件性能</li>
<li>常见的复杂度分析方法：数循环次数/均摊分析（KMP）/递归式（快排、归并排序）主定理</li>
</ul>
<h2 id="常见复杂度对应的算法"><a href="#常见复杂度对应的算法" class="headerlink" title="常见复杂度对应的算法"></a>常见复杂度对应的算法</h2><h3 id="O-1"><a href="#O-1" class="headerlink" title="O(1)"></a>O(1)</h3><p>加减乘除、模运算、寻址</p>
<h3 id="O-logn"><a href="#O-logn" class="headerlink" title="O($logn$)"></a>O($logn$)</h3><p>二分运算、分治</p>
<h3 id="O-n-1-2"><a href="#O-n-1-2" class="headerlink" title="O($n^{1/2}$)"></a>O($n^{1/2}$)</h3><p>枚举约数、判断素数</p>
<h3 id="O-n"><a href="#O-n" class="headerlink" title="O(n)"></a>O(n)</h3><p>线性查找<br>一般是优化算法时间复杂度的<strong>下界</strong>。因为<strong>读入数据</strong>也是需要计入复杂度的。</p>
<h3 id="O-n-2"><a href="#O-n-2" class="headerlink" title="O($n^2$)"></a>O($n^2$)</h3><p>冒泡、选择排序、朴素最近点对</p>
<h3 id="O-n-3"><a href="#O-n-3" class="headerlink" title="O($n^3$)"></a>O($n^3$)</h3><p>Floyd最短路径、普通矩阵乘法（可优化）</p>
<h3 id="O-n-logn"><a href="#O-n-logn" class="headerlink" title="O($n{logn}$)"></a>O($n{logn}$)</h3><p>归并排序、快速排序、堆排序<br>基于<strong>比较</strong>的排序算法的时间复杂度下界。（每次对比两个元素，如果顺序有问题的话就交换）<br>证明：<br>将1到n的自然数排序，某1次排序结果是$n!$种结果中的某1个；<br>排序过程中，每1次比较，都是在$n!$种结果中排除掉了某些（一半）不可能的答案；<br>1次比较最多可以排除掉的答案数量为：${n!}/2$；<br>假设要比较k次才能过获得正确的排序结果，则有：${2^k}&gt;n!$；<br>两边同时取对数：$k&gt;log(n!)$；<br>${n!}&lt;{n^n}$；<br>右边取对数，$log({n^n})=nlogn$；<br>所以最后得到近似结果：$k_{min}=nlogn$。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="效率比较优秀的算法，一般无法给出优化方案"><a href="#效率比较优秀的算法，一般无法给出优化方案" class="headerlink" title="效率比较优秀的算法，一般无法给出优化方案"></a>效率比较优秀的算法，一般无法给出优化方案</h4><p>O(1) &lt; O($logn$) &lt; O($n^{1/2}$) &lt; O(n) &lt; O($n{logn}$)<br>其中，O($logn$)并没有想象的那么大，甚至可以看作一个常数级。</p>
<h4 id="效率比较差的算法，一般能够给出优化方案"><a href="#效率比较差的算法，一般能够给出优化方案" class="headerlink" title="效率比较差的算法，一般能够给出优化方案"></a>效率比较差的算法，一般能够给出优化方案</h4><p>O($n^2$) &lt; O($n^3$) &lt; O(${2^n}$) &lt; O($n!$)</p>
<h2 id="均摊分析思想"><a href="#均摊分析思想" class="headerlink" title="均摊分析思想"></a>均摊分析思想</h2><ul>
<li>解释：“将一次性的操作均摊到整体，计算出时间复杂度”；</li>
<li>实现：MULTIPOP队列可以一次性出队k个元素，而每个元素只出入队列1次；</li>
<li>应用：C++中的<code>vector</code>（动态数组，支持随机访问而非顺序访问），一旦插入的元素超过现有的容量限制，C++则开辟一个扩大1倍的空间，再把原来插入的元素复制过来，最后把原来塞满的空间释放掉。使用vector插入n个数据时，生成的汇编指令条数为${2^0+2^1+2^2+……+2^{logn}}=2n-1$，因此插入n个数据的时间复杂度为O(n)，均摊到每一个数据，时间复杂度为O(1)。相反地，当使用vector从空间尾部开始删除元素的时候，则是上面过程的逆过程，每一个数据的时间复杂度仍为O(1)。</li>
</ul>
<h1 id="栈、队列、并查集、哈希表"><a href="#栈、队列、并查集、哈希表" class="headerlink" title="栈、队列、并查集、哈希表"></a>栈、队列、并查集、哈希表</h1><p>进度待推进。</p>
<h1 id="树和堆"><a href="#树和堆" class="headerlink" title="树和堆"></a>树和堆</h1><p>进度待推进。</p>
<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><p>进度待推进。</p>
<h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p>进度待推进。</p>
<h1 id="深度优先和广度优先"><a href="#深度优先和广度优先" class="headerlink" title="深度优先和广度优先"></a>深度优先和广度优先</h1><p>进度待推进。</p>
<h1 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h1><p>进度待推进。</p>
<h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><p>进度待推进。</p>
<h1 id="并发、大数据、分布式"><a href="#并发、大数据、分布式" class="headerlink" title="并发、大数据、分布式"></a>并发、大数据、分布式</h1><p>进度待推进。</p>
<h1 id="博弈论、概率、数论"><a href="#博弈论、概率、数论" class="headerlink" title="博弈论、概率、数论"></a>博弈论、概率、数论</h1><p>进度待推进。</p>
<hr>
<p>最后，感谢<a href="https://www.julyedu.com/" target="_blank" rel="external">七月在线</a>优秀的老师们提供的指导和干货！</p>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[图床]]></title>
      <url>http://yoursite.com/2016/10/01/2016.10.1%20Attainments04%20%E5%9B%BE%E5%BA%8A/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h1 id="什么是“网络相册”？"><a href="#什么是“网络相册”？" class="headerlink" title="什么是“网络相册”？"></a>什么是“网络相册”？</h1><h2 id="维基百科描述"><a href="#维基百科描述" class="headerlink" title="维基百科描述"></a>维基百科描述</h2><blockquote><p>网络相册，或叫在线相册，为运行、储存以及翻阅、分享于互联网的相册，由于在线相册不是实质的相册并且容易搜索、查阅以及保管，目前大部分照片为储存于在线相册中。<br>此外，用户还可以使用自己的网络空间以搭建自己的在线相册。由于Flickr这一机制的成功，越来越多的网站开始创建自己的在线相册以获取流量。另外，Flickr推行的利用TAG的内容管理机制也越来越多的被接受以及应用。<br>一般可外链的相册会给免费用户提供较少的月流量，成为付费用户之后，可外链流量将获得提升；也有网站专门提供免费外链服务（此类网站又称图床），不限流量。国外著名的可外链相册有Picasa、Flickr、photobucket、Imageshack；中国大陆的可外链相册有又拍网、Tu6等。</p>
<footer><strong>维基百科</strong><cite><a href="https://en.wikipedia.org/wiki/Image_hosting_service" target="_blank" rel="external">网络相册</a></cite></footer></blockquote>
<p><br></p>
<h1 id="为什么要使用网络相册（以下称为图床）？"><a href="#为什么要使用网络相册（以下称为图床）？" class="headerlink" title="为什么要使用网络相册（以下称为图床）？"></a>为什么要使用网络相册（以下称为图床）？</h1><p>其实，对于只写写Hexo博客的我（我们）来说，图床并不是必须的，毕竟博主完全可以把不是很大的图片/音频/视频文件直接丢到<code>/source</code>下面或者每篇文章对应的相对路径下面。<br>但是，<strong>日积月累，这些文件所占用的空间还是非常可观的！</strong>。<br>再加上，GitHub在是属于在翻墙过后食用更佳的网站，如果把图片全堆在自己的repository里，页面加载速度就更慢了。<br>考虑到需要更快的访问速度，同时也为了便于博客的迁移，图床是一个推荐的解决方案。</p>
<a id="more"></a>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>以下测试用例全部通过https访问。</p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="http://oebw3bs16.bkt.clouddn.com/%E9%9D%A2%E7%A0%81.jpg" alt="面码"></p>
<h2 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h2><div id="aplayer0" class="aplayer" style="margin-bottom: 20px;"></div><script>var aplayer0 = new APlayer({element: document.getElementById("aplayer0"),narrow: false,autoplay: false,showlrc: 0,music : {title: "黑键变白键",author: "周杰伦",url: "http://oebw3bs16.bkt.clouddn.com/%E9%BB%91%E9%94%AE%E5%8F%98%E7%99%BD%E9%94%AE.mp3",pic: ""}});aplayer0.init();</script>
<h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><div id="dplayer0" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer0 = new DPlayer({"element":document.getElementById("dplayer0"),"autoplay":false,"theme":"#FADFA3","loop":false,"video":{"url":"http://oebw3bs16.bkt.clouddn.com/%E5%90%9B%E5%98%98%233%E8%8A%82%E9%80%89.mp4"}});</script>
<p>很好很强大，在我后面的博客中，对于所有引用到的<strong>截图、演示图片、演示视频、背景音乐</strong>等等，我都将使用图床的方式来实现。</p>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo中的音频与视频 - 修复]]></title>
      <url>http://yoursite.com/2016/09/27/2016.9.27%20Attainments03%20Hexo%E4%B8%AD%E7%9A%84%E9%9F%B3%E9%A2%91%E4%B8%8E%E8%A7%86%E9%A2%91%20-%20%E4%BF%AE%E5%A4%8D/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在前一篇文章中，我尝试通过类似于下面这种方式来在我的Hexo页面中添加外链播放器：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></div><div class="line">    <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> </div><div class="line">    <span class="attr">width</span>=<span class="string">298</span> <span class="attr">height</span>=<span class="string">52</span> </div><div class="line">    <span class="attr">src</span>=<span class="string">"http://music.163.com/outchain/player?type=2&amp;id=29744802&amp;auto=0&amp;height=32"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>在本地服务器端口<code>http://localhost:4000/</code>中测试时是完全正常的。<br>但是很可惜，由于</p>
<blockquote>
<p>gh-pages强制访问https，而<del>网易云音乐的外链播放器不支持https</del>（知乎能全信吗？）通过插入Html语言（使用flash）的方式中大部分是不支持https访问的。</p>
</blockquote>
<p>所以导致部署到GitHub后不能正常播放。</p>
<p>具体的原理待补充。</p>
<a id="more"></a>
<h1 id="解决思路"><a href="#解决思路" class="headerlink" title="解决思路"></a>解决思路</h1><h2 id="参考思路1"><a href="#参考思路1" class="headerlink" title="参考思路1"></a>参考思路1</h2><p><a href="https://www.zhihu.com/question/50741481/answer/122554583" target="_blank" rel="external">知乎解答 @唐门很太</a></p>
<ol>
<li>安装<a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="external">GitHub - grzhan/hexo-tag-aplayer: Embed aplayer in Hexo posts/pages</a>插件；</li>
<li>调用<a href="https://github.com/YUX-IO/163music-APlayer-you-get-docker" target="_blank" rel="external">GitHub - YUX-IO/163music-APlayer-you-get-docker: A Flask Music Project. Demo:</a><br>项目。<br>第2步中的项目，我还没有成功调用到它的API。于是watch了一下，看以后有没有空再研究吧。</li>
</ol>
<h2 id="参考思路2"><a href="#参考思路2" class="headerlink" title="参考思路2"></a>参考思路2</h2><p><a href="http://login926.top/2016/07/20/HexoMedia/" target="_blank" rel="external">Hexo博客中插入音乐/视频</a><br>无意中看到这位博主的文章，里面很详细地展示了若干种在页面中插入音频/视频的方法，推荐一读。<del>（其实我在前一篇文章中也用教训全部展示过了）</del></p>
<p>小结：</p>
<table>
<thead>
<tr>
<th style="text-align:left">项目</th>
<th style="text-align:center">使用难度</th>
<th style="text-align:center">是否支持https</th>
<th style="text-align:center">是否使用html5</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">插入Html语言</td>
<td style="text-align:center">简单</td>
<td style="text-align:center">大部分不支持</td>
<td style="text-align:center">否，多为使用flash</td>
</tr>
<tr>
<td style="text-align:left">使用Hexo插件</td>
<td style="text-align:center">中等</td>
<td style="text-align:center">支持</td>
<td style="text-align:center">是</td>
</tr>
</tbody>
</table>
<p>于是我愉快地决定采用两款插件基于 <code>DIYgod</code> 编写的 <code>html5</code> 播放器 <code>APlayer</code> 和 <code>DPlayer</code> 。</p>
<p><a href="https://github.com/grzhan/hexo-tag-aplayer#upstream-issue" target="_blank" rel="external">hexo-tag-aplayer</a><br><a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="external">hexo-tag-dplayer</a></p>
<h1 id="hexo-tag-aplayer"><a href="#hexo-tag-aplayer" class="headerlink" title="hexo-tag-aplayer"></a>hexo-tag-aplayer</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装<code>hexo-tag-aplayer</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save hexo-tag-aplayer</div></pre></td></tr></table></figure></p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>使用aplayer<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</div></pre></td></tr></table></figure></p>
<blockquote>
<ul>
<li>title : music title 音乐标题</li>
<li>author: music author 音乐作者</li>
<li>url: music file url 音乐文件url</li>
<li>picture_url: optional, music picture url 可选，音乐封面图片文件url</li>
<li>narrow: optional, narrow style 可选</li>
<li>autoplay: optional, autoplay music, not supported by mobile browsers 可选，自动播放</li>
<li>width:xxx: optional, prefix width:, player’s width (default: 100%) 可选，前缀宽度，播放器宽度</li>
<li>lrc:xxx: optional, prefix lrc:, LRC file url 可选，前缀歌词，歌词文件url</li>
</ul>
</blockquote>
<p>另外，也可以使用<code>aplayerlrc</code>标签来显示歌词。（本文对歌词暂时不做测试）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% aplayerlrc &quot;title&quot; &quot;author&quot; &quot;url&quot; &quot;autoplay&quot; %&#125;</div><div class="line">[00:00.00]lrc here</div><div class="line">&#123;% endaplayerlrc %&#125;</div></pre></td></tr></table></figure></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>通过https访问的音频文件测试<br><div id="aplayer1" class="aplayer" style="margin-bottom: 20px;"></div><script>var aplayer1 = new APlayer({element: document.getElementById("aplayer1"),narrow: false,autoplay: false,showlrc: 0,music : {title: "晴天",author: "刘瑞琦",url: "http://p2.music.126.net/oxP2XaJFDscDuGhGnO7beA==/7768049650386454.mp3",pic: "http://p4.music.126.net/obZy1mbYWFJtbyr26Q6Smg==/7749357952693832.jpg"}});aplayer1.init();</script></p>
<h1 id="hexo-tag-dplayer"><a href="#hexo-tag-dplayer" class="headerlink" title="hexo-tag-dplayer"></a>hexo-tag-dplayer</h1><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>安装<code>hexo-tag-aplayer</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-tag-dplayer --save</div></pre></td></tr></table></figure></p>
<h2 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h2><p>使用aplayer<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer key=value ... %&#125;</div></pre></td></tr></table></figure></p>
<p>其中，字段key可以是：</p>
<blockquote>
<ul>
<li>‘autoplay’: autoplay video, not supported by mobile browsers 自动播放</li>
<li>‘theme’: theme color, default: #b7daff 主体颜色（默认为浅蓝色）</li>
<li>‘loop’: loop play music, default: true 循环播放（默认为是）</li>
<li>‘lang’: language, <code>zh</code> for Chinese, <code>en</code> for English, default: Navigator language 语言</li>
<li>‘screenshot’:  enable screenshot function, default: false, NOTICE: if set it to true, video and video poster must enable Cross-Origin 是否允许截图</li>
<li>‘hotkey’: binding hot key, including left right and Space, default: true 绑定快捷键控制播放器（默认为是）</li>
<li>‘preload’: ‘auto’, the way to load music, can be ‘none’ ‘metadata’ ‘auto’, default: ‘auto’ 预装载</li>
<li>‘url’: Required, video url 视频url</li>
<li>‘pic’: video cover picture 视频封面文件url</li>
<li>‘api’: DPlayer danmaku backend url dplayer的弹幕文件后端url</li>
<li>‘id’: see <a href="https://github.com/DIYgod/DPlayer" target="_blank" rel="external">https://github.com/DIYgod/DPlayer</a></li>
<li>‘token’: see <a href="https://github.com/DIYgod/DPlayer" target="_blank" rel="external">https://github.com/DIYgod/DPlayer</a></li>
<li>‘maximum’: maximum quantity of danmaku 弹幕最大数量</li>
<li>‘width’ maximum width of the dplayer wraper 播放器最大宽度</li>
<li>‘height’ maximum height of the dplayer wraper, you can use this like “height=233px” 播放器最大高度</li>
</ul>
</blockquote>
<p>实例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&#123;% dplayer &quot;url=http://devtest.qiniudn.com/若能绽放光芒.mp4&quot; &quot;api=http://dplayer.daoapp.io&quot; &quot;pic=http://devtest.qiniudn.com/若能绽放光芒.png&quot; &quot;id=9E2E3368B56CDBB4&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;token=tokendemo&quot; %&#125;</div><div class="line">&#123;% dplayer &quot;url=http://devtest.qiniudn.com/若能绽放光芒.mp4&quot; &quot;api=http://dplayer.donot.help/dplayerpy&quot; &quot;pic=http://devtest.qiniudn.com/若能绽放光芒.png&quot; &quot;id=2622668&quot; &quot;loop=yes&quot; &quot;theme=#FADFA3&quot; &quot;autoplay=false&quot; &quot;width=233px&quot; %&#125;</div></pre></td></tr></table></figure></p>
<h2 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h2><p>资源文件夹下的视频文件测试<br><div id="dplayer1" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer1 = new DPlayer({"element":document.getElementById("dplayer1"),"video":{"url":"test.mp4"}});</script></p>
<p>通过https访问的视频文件测试<br><div id="dplayer2" class="dplayer" style="margin-bottom: 20px;"></div><script>var dplayer2 = new DPlayer({"element":document.getElementById("dplayer2"),"autoplay":false,"theme":"#FADFA3","loop":true,"video":{"url":"http://devtest.qiniudn.com/若能绽放光芒.mp4","pic":"http://devtest.qiniudn.com/若能绽放光芒.png"},"danmaku":{"api":"http://dplayer.daoapp.io","id":"9E2E3368B56CDBB4","token":"tokendemo"}});</script></p>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo中的音频与视频 - 失败]]></title>
      <url>http://yoursite.com/2016/09/26/2016.9.26%20Attainments02%20Hexo%E4%B8%AD%E7%9A%84%E9%9F%B3%E9%A2%91%E4%B8%8E%E8%A7%86%E9%A2%91%20-%20%E5%A4%B1%E8%B4%A5/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><p>声明：<strong>前方<del>高能</del>打脸：这是一次失败的尝试！！！</strong></p>
<h1 id="先睹为快"><a href="#先睹为快" class="headerlink" title="先睹为快"></a>先睹为快</h1><p>曲目：TARI TARI 心之旋律 钢琴独奏版<br>演奏者：豆沙团子AnDango（这只up主就是博主本人欢迎来勾搭<del>调教</del>）</p>
<a id="more"></a>
<embed height="415" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=5974935&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"><br>



<h1 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h1><h2 id="想法来源"><a href="#想法来源" class="headerlink" title="想法来源"></a>想法来源</h2><p>今天在<a href="http://www.gangqinpu.com/" target="_blank" rel="external">虫虫钢琴</a>上编辑我的一份乐谱时，发现有其他的博主直接在乐谱介绍中嵌入了B站上对应的演奏视频。于是，自己也这么做了。</p>
<h2 id="在虫钢上的做法"><a href="#在虫钢上的做法" class="headerlink" title="在虫钢上的做法"></a>在虫钢上的做法</h2><p>查看页面源码，发现博主只需要获取一个视频的flash地址，嵌入到如下的代码中即可。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"float:left;text-align:left;margin-bottom:20px;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">object</span> <span class="attr">classid</span>=<span class="string">"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"</span> <span class="attr">codebase</span>=<span class="string">"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,29,0"</span> <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"325"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"movie"</span> <span class="attr">value</span>=<span class="string">"http://share.acg.tv/flash.swf?aid=5277275&amp;page=3"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"quality"</span> <span class="attr">value</span>=<span class="string">"high"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"allowfullscreen"</span> <span class="attr">value</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">"http://share.acg.tv/flash.swf?aid=5277275&amp;page=3"</span> </span></div><div class="line">               <span class="attr">width</span>=<span class="string">"400"</span> <span class="attr">height</span>=<span class="string">"325"</span> <span class="attr">quality</span>=<span class="string">"high"</span> </div><div class="line">               <span class="attr">pluginspage</span>=<span class="string">"http://www.macromedia.com/go/getflashplayer"</span> <span class="attr">type</span>=<span class="string">"application/x-shockwave-flash"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">object</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>话说虫钢这个网站的前端风格和代码规范还停留在本世纪前十年的水准。<del>看起来也没有想在技术上做一轮革新的意向。</del>挺可惜的，毕竟这上面牛B的音乐人还是不少的。</p>
<h2 id="在Hexo中也可以采用同样的做法"><a href="#在Hexo中也可以采用同样的做法" class="headerlink" title="在Hexo中也可以采用同样的做法"></a>在Hexo中也可以采用同样的做法</h2><p>获取B站分享接口中提供给我的html源代码。直接写到博客对应的<code>.md</code>文件中即可。<br>下面这段代码就对应了上面的演示视频。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">embed</span> </span></div><div class="line">    <span class="attr">height</span>=<span class="string">"415"</span> <span class="attr">width</span>=<span class="string">"544"</span> <span class="attr">quality</span>=<span class="string">"high"</span> <span class="attr">allowfullscreen</span>=<span class="string">"true"</span> <span class="attr">type</span>=<span class="string">"application/x-shockwave-flash"</span> </div><div class="line">    <span class="attr">src</span>=<span class="string">"http://static.hdslb.com/miniloader.swf"</span> </div><div class="line">    <span class="attr">flashvars</span>=<span class="string">"aid=5974935&amp;page=1"</span> </div><div class="line">    <span class="attr">pluginspage</span>=<span class="string">"http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>至于这个视频要怎么居中啊？等我回去把CSS重学一遍再回来改。<del>打脸</del></p>
<h1 id="音频"><a href="#音频" class="headerlink" title="音频"></a>音频</h1><p>肖邦练习曲 Op.25 No.5 in E minor</p>
<embed src="http://music.163.com/style/swf/widget.swf?sid=29744802&type=2&auto=0&width=320&height=66" width="340" height="86" allownetworking="all"><br>

<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">embed</span> </span></div><div class="line">    <span class="attr">src</span>=<span class="string">"http://music.163.com/style/swf/widget.swf?sid=29744802&amp;type=2&amp;auto=0&amp;width=320&amp;height=66"</span> </div><div class="line">    <span class="attr">width</span>=<span class="string">"340"</span> <span class="attr">height</span>=<span class="string">"86"</span>  <span class="attr">allowNetworking</span>=<span class="string">"all"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">embed</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- 注意，这里的auto字段表明了在打开页面时是否自动开始播放。为0时否，为1时是。 --&gt;</span></div></pre></td></tr></table></figure>
<h1 id="选择什么标签？"><a href="#选择什么标签？" class="headerlink" title="选择什么标签？"></a>选择什么标签？</h1><h2 id="embed和iframe标签"><a href="#embed和iframe标签" class="headerlink" title="embed和iframe标签"></a>embed和iframe标签</h2><p><a href="http://music.163.com/#/outchain/1/1678955/m/how" target="_blank" rel="external">网易云音乐-外链播放器插件使用教程</a></p>
<h3 id="方式1-embed标签（我上面插入视频和音频用的方式）"><a href="#方式1-embed标签（我上面插入视频和音频用的方式）" class="headerlink" title="方式1 embed标签（我上面插入视频和音频用的方式）"></a>方式1 embed标签（我上面插入视频和音频用的方式）</h3><blockquote>
<p>优点：可以适用大部分的博客，如网易、新浪博客等<br>缺点：<strong>无法自己调整插件的高度、宽度</strong></p>
</blockquote>
<h3 id="方式2-iframe标签"><a href="#方式2-iframe标签" class="headerlink" title="方式2 iframe标签"></a>方式2 iframe标签</h3><blockquote>
<p>优点：<strong>可以自己调整插件的高度、宽度</strong><br>缺点：很多博客网站不支持嵌入iframe，请试一下您的网站是否支持。（但Hexo是支持的，放心）</p>
</blockquote>
<p>总结一下，对于Hexo来说，嵌入两种标签的方式都是支持的。此时iframe标签就有它的优势了：<strong>可以修改播放器的高度和宽度</strong>。</p>
<h3 id="使用iframe标签的方式插入一遍上面的视频和音频。"><a href="#使用iframe标签的方式插入一遍上面的视频和音频。" class="headerlink" title="使用iframe标签的方式插入一遍上面的视频和音频。"></a>使用iframe标签的方式插入一遍上面的视频和音频。</h3><p>可以随意地修改视频/音频播放器的高度和宽度。</p>
<iframe height="400" width="400" src="http://static.hdslb.com/miniloader.swf?aid=5974935&page=1" frameborder="0" allowfullscreen><br></iframe>  

<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span>   </span></div><div class="line">    <span class="attr">height</span>=<span class="string">400</span> <span class="attr">width</span>=<span class="string">400</span>   </div><div class="line">    <span class="attr">src</span>=<span class="string">"http://static.hdslb.com/miniloader.swf?aid=5974935&amp;page=1"</span>   </div><div class="line">    <span class="attr">frameborder</span>=<span class="string">0</span> <span class="attr">allowfullscreen</span>&gt;  </div><div class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=29744802&auto=0&height=32"><br></iframe>

<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> </span></div><div class="line">    <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> </div><div class="line">    <span class="attr">width</span>=<span class="string">298</span> <span class="attr">height</span>=<span class="string">52</span> </div><div class="line">    <span class="attr">src</span>=<span class="string">"http://music.163.com/outchain/player?type=2&amp;id=29744802&amp;auto=0&amp;height=32"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<h2 id="其他方式"><a href="#其他方式" class="headerlink" title="其他方式"></a>其他方式</h2><h3 id="video标签"><a href="#video标签" class="headerlink" title="video标签"></a>video标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;video width=&quot;480&quot; height=&quot;320&quot; controls&gt;</div><div class="line">&lt;source src=&quot;http://mvvideo2.meitudata.com/56ea1220d2ca92407.mp4&quot;&gt;</div><div class="line">&lt;/video&gt;</div></pre></td></tr></table></figure>
<h3 id="直接添加js代码"><a href="#直接添加js代码" class="headerlink" title="直接添加js代码"></a>直接添加js代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.xiami.com/widget/player-single?uid=32329501&amp;sid=1776238762&amp;mode=js&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h1 id="本地调试"><a href="#本地调试" class="headerlink" title="本地调试"></a>本地调试</h1><p>最后，附上我在本地服务器端口调试时可以正常播放的截图。</p>
<img src="/2016/09/26/2016.9.26%20Attainments02%20Hexo中的音频与视频%20-%20失败/screenshot1.jpg" alt="使用embed插入的视频播放器" title="使用embed插入的视频播放器">
<img src="/2016/09/26/2016.9.26%20Attainments02%20Hexo中的音频与视频%20-%20失败/screenshot2.jpg" alt="使用embed插入的音频播放器" title="使用embed插入的音频播放器">
<img src="/2016/09/26/2016.9.26%20Attainments02%20Hexo中的音频与视频%20-%20失败/screenshot3.jpg" alt="使用iframe插入的音频播放器" title="使用iframe插入的音频播放器">
<img src="/2016/09/26/2016.9.26%20Attainments02%20Hexo中的音频与视频%20-%20失败/screenshot4.jpg" alt="使用iframe插入的音频播放器" title="使用iframe插入的音频播放器">
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown入门手册]]></title>
      <url>http://yoursite.com/2016/09/24/2016.9.24%20Attainments01%20Markdown%E5%85%A5%E9%97%A8%E6%89%8B%E5%86%8C/</url>
      <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><script src="/assets/js/APlayer.min.js"> </script><h1 id="Markdown标记语言入门"><a href="#Markdown标记语言入门" class="headerlink" title="Markdown标记语言入门"></a>Markdown标记语言入门</h1><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul>
<li>1</li>
<li>2</li>
<li>3</li>
</ul>
<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol>
<li>1</li>
<li>2</li>
<li>3</li>
</ol>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote>
<p>引用测试</p>
</blockquote>
<h3 id="网页链接与图片链接（Markdown语法方式）"><a href="#网页链接与图片链接（Markdown语法方式）" class="headerlink" title="网页链接与图片链接（Markdown语法方式）"></a>网页链接与图片链接（Markdown语法方式）</h3><p><a href="http://markdownpad.com/" target="_blank" rel="external">Markdown</a></p>
<p><img src="http://markdownpad.com/img/markdownpad2-weblogo.png" alt="Markdown logo"></p>
<a id="more"></a>
<h3 id="粗体（bold）与斜体（italic）"><a href="#粗体（bold）与斜体（italic）" class="headerlink" title="粗体（bold）与斜体（italic）"></a>粗体（bold）与斜体（italic）</h3><p><strong>加粗文本</strong></p>
<p><em>倾斜文本</em></p>
<h3 id="代码块：Tab键缩进4个空格"><a href="#代码块：Tab键缩进4个空格" class="headerlink" title="代码块：Tab键缩进4个空格"></a>代码块：Tab键缩进4个空格</h3><pre><code>System.out.println(&quot;Keep Coding.&quot;);
</code></pre><h3 id="行内代码块：使用一对"><a href="#行内代码块：使用一对" class="headerlink" title="行内代码块：使用一对``"></a>行内代码块：使用一对``</h3><p><code>System.out.println(&quot;Keep Coding.&quot;);</code></p>
<p>输出“坚持写代码”：<code>System.out.println(&quot;Keep Coding.&quot;);</code></p>
<blockquote>
<p>输出“坚持写代码”：<code>System.out.println(&quot;Keep Coding.&quot;);</code></p>
</blockquote>
<h3 id="输出单独的空行"><a href="#输出单独的空行" class="headerlink" title="输出单独的空行"></a>输出单独的空行</h3><ol>
<li><p>半角空格<br>在要换行的这一行单独写<code>&amp;ensp;</code>或者<code>&amp;#8194;</code><br>&ensp;<br>换行测试<br>&#8194; </p>
</li>
<li><p>全角空格<br>在要换行的这一行单独写<code>&amp;emsp;</code>或者<code>&amp;#8195;</code><br>&emsp;<br>换行测试<br>&#8195; </p>
</li>
<li><p>直接使用Html标签（推荐）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></div></pre></td></tr></table></figure>
</li>
</ol>
<p>换行测试<br><br>换行测试<br><br>换行测试<br></p>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><blockquote>
<p>标准的Markdown标记后面都要加上<strong>空格</strong>，否则无法解析。</p>
</blockquote>
<hr>
<h2 id="进阶语法"><a href="#进阶语法" class="headerlink" title="进阶语法"></a>进阶语法</h2><h3 id="组合使用引用和列表"><a href="#组合使用引用和列表" class="headerlink" title="组合使用引用和列表"></a>组合使用引用和列表</h3><p>我们可以使用Markdown做什么？</p>
<blockquote>
<ul>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ul>
<ol>
<li>整理知识，学习笔记</li>
<li>发布日记，杂文，所见所想</li>
<li>撰写发布技术文稿（代码支持）</li>
<li>撰写发布学术论文（LaTeX 公式支持）</li>
</ol>
</blockquote>
<h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>使用一对<code>~~</code>表示删除线。两个<code>~~</code>之间的内容就是删除线标记的内容。</p>
<p>欢迎来勾搭<del>调教</del>博主。</p>
<h3 id="LaTeX-公式（需要先在主题配置文件中配置mathjax字段）"><a href="#LaTeX-公式（需要先在主题配置文件中配置mathjax字段）" class="headerlink" title="LaTeX 公式（需要先在主题配置文件中配置mathjax字段）"></a>LaTeX 公式（需要先在主题配置文件中配置mathjax字段）</h3><p>$ 表示行内公式： </p>
<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
<p>$$ 表示整行公式：</p>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<h3 id="高亮代码块"><a href="#高亮代码块" class="headerlink" title="高亮代码块"></a>高亮代码块</h3><p>支持41种编程语言的语法高亮+行号显示。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[language] [title] [url] [link text] code snippet</div></pre></td></tr></table></figure></p>
<p>非代码示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo apt-get install vim-gnome</div></pre></td></tr></table></figure></p>
<p>Java语言示例：<br><figure class="highlight java"><figcaption><span>定义方法完成成绩排序并输出前自定义名数的功能</span><a href="http://……" target="_blank" rel="external">假装有链接</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(<span class="keyword">int</span>[] scores , <span class="keyword">int</span> number)</span></span>&#123;</div><div class="line">	Arrays.sort(scores);</div><div class="line">	<span class="keyword">int</span> flag = <span class="number">0</span>;<span class="comment">//保存有效成绩个数</span></div><div class="line">	<span class="keyword">for</span> ( <span class="keyword">int</span> i = scores.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- ) &#123; </div><div class="line">		<span class="keyword">if</span>(scores[i]&gt;<span class="number">100</span> || scores[i]&lt;<span class="number">0</span> )&#123;</div><div class="line">			System.out.println(<span class="string">"该成绩（"</span>+ scores[i] +<span class="string">"分）无效！"</span>);</div><div class="line">			<span class="keyword">continue</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			flag++;</div><div class="line">			<span class="keyword">if</span>(flag &lt;= number)</div><div class="line">			    System.out.println(<span class="string">"这是第"</span> + (scores.length - i -<span class="number">1</span>) + <span class="string">"名的成绩："</span>+scores[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>JavaScript语言示例：<br><figure class="highlight javascript"><figcaption><span>斐波那契数列</span><a href="http://……" target="_blank" rel="external">假装有链接2</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">* nth element in the fibonacci series.</div><div class="line">* @param n &gt;= 0</div><div class="line">* @return the nth element, &gt;= 0.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</div><div class="line">  <span class="keyword">var</span> tmp;</div><div class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</div><div class="line">    tmp = a;</div><div class="line">    a += b;</div><div class="line">    b = tmp;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> a;</div><div class="line">&#125;</div><div class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</div></pre></td></tr></table></figure></p>
<h3 id="内嵌Html标签"><a href="#内嵌Html标签" class="headerlink" title="内嵌Html标签"></a>内嵌Html标签</h3><p>Markdown语法中可以嵌套Html标签，譬如，可以用table标签来写一个纵跨两行的表格。<br><figure class="highlight html"><figcaption><span>一个纵跨两行的表格</span><a href="http://……" target="_blank" rel="external">假装有链接3</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>值班人员<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>李强<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>张明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>王平<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>也可以使用<code>video</code>/<code>embed</code>/<code>iframe</code>/<code>script</code>标签来插入音频和视频，但是会有一定的播放局限性。<em>具体可以参见我后面的文章 <a href="/2016/09/26/2016.9.26 Attainments02 Audios and Videos in Hexo - Failed">Audios and Videos in Hexo - Failed</a> 。</em></p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><ul>
<li>最上面1行是表格<strong>第1行</strong>的值。</li>
<li>第2行的冒号位置决定表格内文本的对齐方式。有水平居中、水平靠左对齐、水平靠右对齐三种。</li>
<li>切记<strong>表格要与上面的文本内容空一行</strong>，否则无法解析。</li>
<li>每列的宽度是根据对应列里最长的文本来决定的。</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">链接</th>
<th style="text-align:center">结果</th>
<th style="text-align:right">原因</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">同协议同域名同端口</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">同协议同域名同端口</td>
</tr>
<tr>
<td style="text-align:left">文本内容</td>
<td style="text-align:center"><strong><code>是</code></strong></td>
<td style="text-align:right">同协议同域名同端口</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| 链接 | 结果 | 原因 |</div><div class="line">|:-----|:---:|----------:|</div><div class="line">|文本内容| **`是`** |同协议同域名同端口|</div><div class="line">|文本内容| **`是`** |同协议同域名同端口|</div><div class="line">|文本内容| **`是`** |同协议同域名同端口|</div></pre></td></tr></table></figure>
<h3 id="关于其他扩展语法"><a href="#关于其他扩展语法" class="headerlink" title="关于其他扩展语法"></a>关于其他扩展语法</h3><p>Hexo似乎没有支持更多的Markdown扩展语法，例如流程图、序列图、Todo列表、注脚等等。<br>Cmd Markdown支持很丰富的Markdown扩展语法。推荐学习使用。<br><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd Markdown 编辑阅读器</a></p>
<hr>
<h1 id="有趣又强大的Hexo内置标签插件"><a href="#有趣又强大的Hexo内置标签插件" class="headerlink" title="有趣又强大的Hexo内置标签插件"></a>有趣又强大的Hexo内置标签插件</h1><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote>
<ul>
<li>作用：在文章中插入引言，可包含作者、来源和标题。</li>
<li>别号：quote<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;</div><div class="line">content</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="没有提供参数，则只输出普通的-blockquote"><a href="#没有提供参数，则只输出普通的-blockquote" class="headerlink" title="没有提供参数，则只输出普通的 blockquote"></a>没有提供参数，则只输出普通的 blockquote</h4><blockquote><p>测试文字测试文字测试文字测试文字测试文字测试文字测试文字。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote %&#125;</div><div class="line">测试文字测试文字测试文字测试文字测试文字测试文字测试文字。</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>
<h4 id="引用书上的句子"><a href="#引用书上的句子" class="headerlink" title="引用书上的句子"></a>引用书上的句子</h4><blockquote><p>引用书上的文字测试。</p>
<footer><strong>作者名</strong><cite>书名</cite></footer></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote 作者名, 书名 %&#125;</div><div class="line">引用书上的文字测试。</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>
<h4 id="引用Twitter-Weibo"><a href="#引用Twitter-Weibo" class="headerlink" title="引用Twitter/Weibo"></a>引用Twitter/Weibo</h4><blockquote><p>被删减的蕾姆糖</p>
<footer><strong>@二次元娘</strong><cite><a href="http://weibo.com/ttarticle/p/show?id=2309404012440596679026" target="_blank" rel="external">weibo.com/ttarticle/p/show?id=2309404012440596679026</a></cite></footer></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote @作者 https://…… %&#125;</div><div class="line">推文/微博内容测试文字。</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>
<h4 id="引用网络上的文章"><a href="#引用网络上的文章" class="headerlink" title="引用网络上的文章"></a>引用网络上的文章</h4><blockquote><p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。</p>
<footer><strong>Te_Lee</strong><cite><a href="http://www.jianshu.com/p/1e402922ee32" target="_blank" rel="external">Markdown——入门指南</a></cite></footer></blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% blockquote 作者名 http://…… 文章标题 %&#125;</div><div class="line">引用网络上的文章内容测试。</div><div class="line">&#123;% endblockquote %&#125;</div></pre></td></tr></table></figure>
<h4 id="引用居中文本"><a href="#引用居中文本" class="headerlink" title="引用居中文本"></a>引用居中文本</h4><blockquote class="blockquote-center"><p>居中文本居中文本居中文本居中文本。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% centerquote %&#125;</div><div class="line">居中文本居中文本居中文本居中文本。</div><div class="line">&#123;% endcenterquote %&#125;</div></pre></td></tr></table></figure>
<h2 id="代码块（与反引号代码块的功能完全等价）"><a href="#代码块（与反引号代码块的功能完全等价）" class="headerlink" title="代码块（与反引号代码块的功能完全等价）"></a>代码块（与反引号代码块的功能完全等价）</h2><blockquote>
<ul>
<li>作用：在文章中插入代码。</li>
<li>别名：code<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</div><div class="line">code snippet</div><div class="line">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h3 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h3><h4 id="普通的代码块"><a href="#普通的代码块" class="headerlink" title="普通的代码块"></a>普通的代码块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.out.println(&quot;Test Code.&quot;);</div></pre></td></tr></table></figure>
<h4 id="指定语言的代码块（不显示语言类型，但根据不同语言的关键字设置调整代码颜色）"><a href="#指定语言的代码块（不显示语言类型，但根据不同语言的关键字设置调整代码颜色）" class="headerlink" title="指定语言的代码块（不显示语言类型，但根据不同语言的关键字设置调整代码颜色）"></a>指定语言的代码块（不显示语言类型，但根据不同语言的关键字设置调整代码颜色）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.out.println(<span class="string">"Test Code."</span>);</div></pre></td></tr></table></figure>
<h4 id="附加说明的代码块"><a href="#附加说明的代码块" class="headerlink" title="附加说明的代码块"></a>附加说明的代码块</h4><figure class="highlight plain"><figcaption><span>使用Java在控制台打印</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">System.out.println(&quot;Test Code.&quot;);</div></pre></td></tr></table></figure>
<h4 id="附加说明和网址的代码块"><a href="#附加说明和网址的代码块" class="headerlink" title="附加说明和网址的代码块"></a>附加说明和网址的代码块</h4><figure class="highlight plain"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" target="_blank" rel="external">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</div><div class="line">=&gt; [1, 2, 3]</div></pre></td></tr></table></figure>
<h2 id="更科学地在博客中使用本地图片资源"><a href="#更科学地在博客中使用本地图片资源" class="headerlink" title="更科学地在博客中使用本地图片资源"></a>更科学地在博客中使用本地图片资源</h2><p>在站点配置文件中，把<code>post_asset_folder</code>字段的值设置为<code>true</code>。<br>通过<strong>相对路径引用的标签插件</strong>来把<strong>资源文件夹</strong>中的图片文件引入到页面中。</p>
<p>当资源文件管理功能打开后，Hexo将会在你每一次通过<code>hexo new [layout] &lt;title&gt;</code>命令创建新文章时自动创建一个文件夹。这个资源文件夹将会有与这个 Markdown 文件一样的名字。将所有与你的文章有关的资源放在这个关联文件夹中之后，你可以通过相对路径来引用它们，这样你就得到了一个更简单而且方便得多的工作流。</p>
<p>正确的引用图片方式是使用下列的标签插件<strong>而不是Markdown原生标记</strong>！<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% asset_img example.jpg This is an example image %&#125;</div></pre></td></tr></table></figure></p>
<p>通过这种方式，图片将会同时出现在文章和主页以及归档页中。</p>
<p>另外，如果把<code>asset_img</code>标签替换为与之语法相似的<code>aplayer</code>和<code>dplayer</code>标签，即可实现把音频/视频文件引入到页面中。<em>具体可以参见我后面的文章 <a href="/2016/09/27/2016.9.27 Attainments03 Audios and Videos in Hexo - Fixed">Audios and Videos in Hexo - Fixed</a> 。</em></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><h3 id="正常图片"><a href="#正常图片" class="headerlink" title="正常图片"></a>正常图片</h3><img src="/2016/09/24/2016.9.24%20Attainments01%20Markdown入门手册/FullSizeImageTest.jpg" alt="面码" title="面码">
<h3 id="突破容器宽度限制的图片"><a href="#突破容器宽度限制的图片" class="headerlink" title="突破容器宽度限制的图片"></a>突破容器宽度限制的图片</h3><img src="FullSizeImageTest.jpg" class="full-image" alt="alt" title="面码">
<h2 id="更多标签"><a href="#更多标签" class="headerlink" title="更多标签"></a>更多标签</h2><p><a href="https://hexo.io/zh-cn/docs/tag-plugins.html" target="_blank" rel="external">Hexo文档-标签插件</a></p>
<hr>
<p><strong>感谢阅读，有任何意见或建议欢迎私信我或在评论区留言哦。</strong></p>
]]></content>
    </entry>
    
  
  
</search>
